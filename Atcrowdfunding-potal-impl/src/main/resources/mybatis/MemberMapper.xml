<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.atcrowdfunding.potal.dao.MemberMapper">

	<resultMap id="BaseResultMap" type="com.atguigu.atcrowdfunding.bean.Member">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="loginacct" property="loginacct" jdbcType="VARCHAR" />
		<result column="userpswd" property="userpswd" jdbcType="CHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="authstatus" property="authstatus" jdbcType="CHAR" />
		<result column="usertype" property="usertype" jdbcType="CHAR" />
		<result column="realname" property="realname" jdbcType="VARCHAR" />
		<result column="cardnum" property="cardnum" jdbcType="VARCHAR" />
		<result column="accttype" property="accttype" jdbcType="CHAR" />
	</resultMap>

	<!--通过主键删除-->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_member
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<!--添加会员-->
	<insert id="insert" parameterType="com.atguigu.atcrowdfunding.bean.Member">
		insert into t_member (id,
		loginacct, userpswd, username,
		email, authstatus, usertype,
		realname, cardnum, accttype
		)
		values
		(
		#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR},
		#{userpswd,jdbcType=CHAR}, #{username,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{authstatus,jdbcType=CHAR},
		#{usertype,jdbcType=CHAR}, #{realname,jdbcType=VARCHAR},
		#{cardnum,jdbcType=VARCHAR}, #{accttype,jdbcType=CHAR}
		)
	</insert>

	<!--修改会员-->
	<update id="updateByPrimaryKey" parameterType="com.atguigu.atcrowdfunding.bean.Member">
		update t_member
		set
		loginacct = #{loginacct,jdbcType=VARCHAR},
		userpswd = #{userpswd,jdbcType=CHAR},
		username = #{username,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		authstatus = #{authstatus,jdbcType=CHAR},
		usertype = #{usertype,jdbcType=CHAR},
		realname = #{realname,jdbcType=VARCHAR},
		cardnum = #{cardnum,jdbcType=VARCHAR},
		accttype = #{accttype,jdbcType=CHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!--通过主键查找会员-->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, loginacct, userpswd, username, email,
		authstatus, usertype, realname, cardnum, accttype
		from t_member
		where id = #{id,jdbcType=INTEGER}
	</select>

	<!--通过登录名查找会员-->
	<select id="selectByLoginacct" resultMap="BaseResultMap"
			parameterType="java.lang.String">
		select id, loginacct, userpswd, username, email,
		authstatus, usertype, realname, cardnum, accttype
		from t_member
		where loginacct = #{loginacct,jdbcType=VARCHAR}
	</select>

	<!--遍历会员表-->
	<select id="selectAll" resultMap="BaseResultMap">
		select id, loginacct, userpswd,
		username, email, authstatus,
		usertype, realname, cardnum, accttype
		from t_member
	</select>

	<!--会员登录的检测-->
	<select id="queryMemberlogin" parameterType="map" resultMap="BaseResultMap">
		select id, loginacct, userpswd,
		username, email, authstatus,usertype,
		realname, cardnum, accttype
		from t_member
		where loginacct=#{loginacct} and userpswd=#{userpswd}
	</select>

</mapper>