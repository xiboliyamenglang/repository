<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">

 <display-name>atcrowdfunding</display-name>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:spring/spring-*.xml</param-value>
    </context-param>
    
    <!-- 监听器:
    	创建spring框架的IOC容器，
    	将IOC容器对象存放到application域，
    	ApplicationContext ioc = WebApplicationContextUtils.getWebApplicationContext(application);
     
     	ServletContextListener:
     		监听ServletContext创建和销毁。
     			如果监听到ServletContext创建（服务器启动），就会创建IOC容器（XmlWebApplicationContext）。
     			如果监听到ServletContext销毁（服务器停止，或卸载项目），就会销毁IOC容器。
     -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 字符编码过滤器：
    	只负责解决POST请求乱码问题 -->
    <filter>
        <filter-name>encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<!-- 支持RESTful风格，将POST请求转换为PUT或DELETE请求。
	
	会读取隐含参数："_method"
	在springmvc核心控制器执行前执行 -->
	<filter>  
	    <filter-name>HiddenHttpMethodFilter</filter-name>  
	    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>  
	</filter>
	<filter-mapping>  
	    <filter-name>HiddenHttpMethodFilter</filter-name>  
	    <servlet-name>springmvc</servlet-name>  
	</filter-mapping> 
    
    <!-- servlet默认第一次访问时才会创建
    	若加上<load-on-startup>配置，则修改为服务器启动时就创建 -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/springmvc-context.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!-- NO1.精确匹配 -->
        <!-- <url-pattern>/user/save</url-pattern> -->
        
        <!-- NO2.路径匹配 -->
        <!-- <url-pattern>/user/*</url-pattern>
        <url-pattern>/*</url-pattern> -->
        
        <!-- NO3.扩展匹配
        	不允许（非法匹配）：/user/*.do  -->
        <url-pattern>*.htm</url-pattern>
        <url-pattern>*.do</url-pattern>
        
        <!-- NO4.默认匹配 -->
        <!-- <url-pattern>/</url-pattern> -->
    </servlet-mapping>
    
    <!-- sessino会话超时时间 -->
    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>
    
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>